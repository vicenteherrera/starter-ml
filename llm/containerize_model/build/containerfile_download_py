
FROM python:3.11.7

WORKDIR /app

ARG MODEL
ARG REVISION
ARG MODEL_EXT
ENV MODEL="${MODEL}"
ENV REVISION="${REVISION}"

# App specific stuff

ARG YOUR_ENV
ENV YOUR_ENV=${YOUR_ENV} \
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  POETRY_VERSION=1.8.3

# System deps:
RUN pip install "poetry==$POETRY_VERSION"

# Copy only requirements to cache them in docker layer
COPY poetry.lock pyproject.toml /app/

# Project initialization:
RUN poetry config virtualenvs.create false \
  && poetry install $(test "$YOUR_ENV" == "production" && echo "--no-dev") --no-interaction --no-ansi


# Download cache of models and datasets

ENV HF_HOME="/app/.cache/huggingface/"

COPY ./build/model_download.py /app/build/model_download.py

RUN HF_HOME='./.cache/huggingface/' \
    MODEL="${MODEL}" \
    REVISION="${REVISION}" \
    MODEL_EXT="${MODEL_EXT}" \
    poetry run python ./build/model_download.py  && \
    rm -rf /app/build

# Creating folders, and files for a project:
COPY ./src /app/src

ENV HF_HUB_OFFLINE=1 
ENV HF_HUB_DISABLE_TELEMETRY=1

CMD ["poetry",  "--quiet", "run", "python", "./src/app.py"]
